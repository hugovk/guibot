dist: bionic
language: python
python:
- 3.5
- 3.6
- 3.7
- 3.8
- pypy3.5
env:
- INSTALL_VARIANT=pip
matrix:
  include:
  - python: 3.7
    env: INSTALL_VARIANT=rpm.fedora.31
  - python: 3.8
    env: INSTALL_VARIANT=rpm.fedora.32
  - python: 3.5
    env: INSTALL_VARIANT=deb.ubuntu.xenial
  - python: 3.6
    env: INSTALL_VARIANT=deb.ubuntu.bionic
  - python: 3.7
    env: INSTALL_VARIANT=deb.ubuntu.focal
  allow_failures:
  # the pypi setup is limited in terms of Qt4 and Tesseract dependencies
  - python: pypy3.5
services:
# docker images are not cached by travis due to vm recreation for each build
- docker
cache:
  pip: true
  directories:
  # cache large DL models
  - $HOME/.cache/torch/checkpoints
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    # ocr
    - pkg-config
    - tesseract-ocr
    - libtesseract-dev
    # virtual screen
    - libx11-dev
    - libxtst-dev
    # xdotool
    - xdotool
    - x11-apps
    - imagemagick
    # vncdotool
    - xfonts-base
    - x11vnc
# install any dependencies and build package
install:
- travis_retry pip --default-timeout=60 install -U pip
- if [[ $INSTALL_VARIANT == "pip" ]]; then travis_retry pip --default-timeout=60 install -r packaging/pip_requirements.txt; fi
before_script:
- export DISPLAY=:99.0
- "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile
  --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1024x768x24"
- sleep 3  # give xvfb some time to start
- if [[ $TRAVIS_PYTHON_VERSION == '3.5' ]]; then export DISABLE_OCR=1; fi
- if [[ $TRAVIS_PYTHON_VERSION == 'pypy3.5' ]]; then export DISABLE_AUTOPY=1; fi
- if [[ $TRAVIS_PYTHON_VERSION == 'pypy3.5' ]]; then export DISABLE_PYQT=1; fi
- if [[ $TRAVIS_PYTHON_VERSION == 'pypy3.5' ]]; then export DISABLE_OPENCV=1; fi
# run tests
script:
- if [[ $INSTALL_VARIANT != "pip" ]]; then cd packaging && bash packager_docker.sh;
  else cd tests && bash run_tests.sh; fi
- if [[ $INSTALL_VARIANT == "pip" ]]; then codecov; fi
# use this to disable email notifications (e.g. while testing configuration)
#notifications:
#email: false
before_deploy: "cd .. && cd packaging"
deploy:
  provider: pypi
  user: "__token__"
  password:
    secure: xIlFxzEDn+Wnl6EsYbTvR2wiuU0AJbqoc+qtrvY8lpvuE5WDB+b6YNOIyWQ6WBjyMhQrget5/zl36AyB44H6WbJO/9n9RcfpeTpqm/UzSqbLxFrZGqW1k7iQVRNhb+DBi3KfsWGteczFRUQDycExp5qiBjMC3nSq7vhawmFFESPFRVRHoAp0naa6l/dsICPTDHFwcVR1adzJMarFByJ4AkenHPzYi5gFDSPtk0JAHFBNy1l2WlSYNtBX2Umo0GJgEAu5SPem9fnp1CZ+4pOHxqoEuszQvDE7ICZRLYDmOAe29qi+FUgJkUabOF0yPRzeXmFyLeomf2iqpn95O2HKx/+B/2P7QVpleNhyVI490KMASkISWgbd0EYb8vZQ9gdH+k1DtYd/Gi9Tn+1gbLORq3gHnXYQ9t9LEKS5kGEEkWQjG6L4eqINrawLxfTvzihTXzPRWyur0pTV/qPKtZfJeCyNMC1/2mDeitaWO17CeU/Y/qbYc6qlbW/hOnGSH6ODVVQP1Gh87/JHzzK3iIx2QmyubHfFVeixoVm/zf5F5u/DNxsAZm0Cuu1BzSGpEwjgVbjoMQxTsD8HINvEqcG9dRw+L7R6ym9E0cPp+PGXf4NNc8f0GK0yUHSIoUCylIvfe8JbGLKYKQ3UhLFN76lLdSInCV+z9lDCTLwO1zsAka0=
  distributions: "sdist bdist_wheel"
  skip_existing: true
  on:
    tags: true
